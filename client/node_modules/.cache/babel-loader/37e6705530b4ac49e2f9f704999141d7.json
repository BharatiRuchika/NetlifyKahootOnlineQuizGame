{"ast":null,"code":"import _toConsumableArray from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';import{io}from'socket.io-client';import{connect}from'react-redux';import{selectedPin,editHostPins}from'../../Reducer/Reducer';import sound1 from'../../Assets/counter.wav';import GameQuestions from'./Game_Questions';import GameQuestionOver from'./Game_Question_Over';import Socket from\"../../Socket\";import sound from'../../Assets/ting.mp3';import jwt from\"jsonwebtoken\";import\"./Game.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(){var _this;_classCallCheck(this,Game);_this=_super.call(this);_this.state={pin:0,timer:20,isLive:false,questionOver:false,gameOver:false,currentQuestion:0,questions:[],players:[],playersLength:'false',playerCounter:0,leaderBoard:[]};_this.questionOver=_this.questionOver.bind(_assertThisInitialized(_this));_this.nextQuestion=_this.nextQuestion.bind(_assertThisInitialized(_this));_this.audio=new Audio(sound);_this.audio1=new Audio(sound1);return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var connectionOptions,token,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connectionOptions={\"force new connection\":true,\"reconnect\":true,\"reconnectionAttempts\":\"Infinity\",\"timeout\":10000,\"transports\":[\"websocket\"]};token=localStorage.getItem(\"token\");console.log(\"token\",token);console.log(\"game component mounted\");console.log(\"players\",this.state.players);console.log(\"props\",this.props);_context.next=8;return axios.get(\"http://localhost:3001/quizquestions/getQuestions/\".concat(this.props.quiz._id),{headers:{'auth-token':token}});case 8:res=_context.sent;this.setState({questions:res.data});this.generatePin();Socket.on('room-joined',function(data){console.log(\"game room joined\",data);_this2.addPlayer(data.name,data.id,data.pin);});Socket.on('host-joined',function(data){console.log(\"host room joined\",data);_this2.addHost(data.id);});Socket.on('player-answer',function(data){_this2.submitAnswer(data.name,data.answer);});Socket.on(\"left\",function(data){console.log(\"left event call\");console.log(\"data\",data);_this2.removePlayer(data.id);});Socket.on(\"pin-checked\",function(data){console.log(\"data\",data);console.log(\"pin\",data.pin);console.log(data.len,data.clen);var length=data.len;var current_length=data.clen;console.log(\"game pin\",_this2.state.pin);if(data.pin==_this2.state.pin){var valid=true;}else{var valid=false;}console.log(\"valid\",valid);if(valid==true){current_length=length;Socket.emit(\"valid\",valid);}else{if(data.len==data.clen){Socket.emit(\"valid\",valid);}}});case 16:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"removePlayer\",value:function removePlayer(id){var _this3=this;var players=this.state.players;console.log(\"players\",players);var result=players.filter(function(player){return player.id!=id;});console.log(\"result\",result);this.setState({players:result},function(){console.log(_this3.state.players,'players');});}},{key:\"generatePin\",value:function generatePin(){console.log(\"generate pin called\");console.log(\"props\",this.props);var newPin=Math.floor(Math.random()*9000,10000);// console.log(\"pin\", newPin);\nthis.setState({pin:newPin});Socket.emit('host-join',{pin:newPin});this.props.selectedPin(this.state.pin);this.props.editHostPins(this.state.pin);}},{key:\"startGame\",value:function startGame(){// console.log(\"Game Started\");\nvar players=this.state.players;console.log(\"players\",players);console.log(\"players length\",players.length);if(players[0]&&players[1]){this.nextQuestion();this.setState({isLive:true});}else{alert('You need at least 2 players to start');}// this.nextQuestion();\n// this.setState({\n//     isLive: true\n// })\n}},{key:\"questionOver\",value:function questionOver(){console.log(\"question over call\");var _this$state=this.state,pin=_this$state.pin,players=_this$state.players;// console.log(\"pin\", pin);\nSocket.emit('question-over',{pin:pin});var updatedPlayers=_toConsumableArray(players);updatedPlayers.forEach(function(player){player.qAnswered=false;player.answeredCorrect=false;});this.getLeaderBoard();this.setState({questionOver:true,currentQuestion:this.state.currentQuestion+1});}},{key:\"timeKeeper\",value:function timeKeeper(){var internalTimer=20;console.log(\"timekeeper called\");var players=_toConsumableArray(this.state.players);console.log(\"players\",players);this.setState({questionOver:false});timeCheck=timeCheck.bind(this);function timeCheck(){var _this4=this;// console.log(\"timecheck called\");\nconsole.log(\"internaleTimer\",internalTimer);var checkAnswers=function checkAnswers(){var pAnswered=0;players.forEach(function(player){return player.qAnswered?++pAnswered:null;});players.forEach(function(player){// console.log(\"correct/incorrect\",player.answeredCorrect);\nif(player.answeredCorrect){console.log(player.name+\"answer correctlye\");console.log(\"internal timer\"+internalTimer);var score=internalTimer*10+1000;console.log(\"score\",score);player.score+=internalTimer*10+1000;Socket.emit('sent-info',{id:player.id,pin:_this4.state.pin,score:player.score,answeredCorrect:player.answeredCorrect});}});console.log(\"internal timer\"+internalTimer);if(internalTimer==4){_this4.audio1.play();}return pAnswered===players.length?internalTimer=0:internalTimer-=1;// return internalTimer -= 1;\n};var endQuestion=function endQuestion(){clearInterval(timeKept);_this4.questionOver();};return internalTimer>0?checkAnswers():endQuestion();}var timeKept=setInterval(function(){timeCheck();},1000);return timeKept;}},{key:\"nextQuestion\",value:function nextQuestion(){console.log(\"next question called\");var _this$state2=this.state,pin=_this$state2.pin,questions=_this$state2.questions,currentQuestion=_this$state2.currentQuestion;this.timeKeeper();if(currentQuestion===questions.length){this.setState({gameOver:true});Socket.emit('game-over');}else{Socket.emit('next-question',{pin:pin});}// currentQuestion === questions.length\n//     ? this.setState({ gameOver: true })\n//     this.Socket.emit('question-over')\n//     :\n// this.Socket.emit('next-question', { pin })\nthis.setState({questionOver:false});}},{key:\"addHost\",value:function addHost(id){this.setState({HostId:id});}},{key:\"addPlayer\",value:function addPlayer(name,id,pin){var _this5=this;console.log(\"im in add player\");if(pin==this.state.pin){this.audio.play();// this.setState({id:id})\n//  audio.play();\nconsole.log(\"add player call\");console.log(\"add player name\",name);// console.log(\"id\",id);\nconsole.log(\"players\",this.state.players);console.log(id+\"\"+pin);var new_id=id+\"\"+pin;// console.log(\"add player id\", id);\nvar player={id:id,// this is now their socket id so they can pull their score to the player component using this\nname:name,score:0,qAnswered:false,answeredCorrect:false};console.log(\"player\",player);var newPlayers=_toConsumableArray(this.state.players);newPlayers.push(player);console.log(\"newPLayers\",newPlayers);this.setState({players:newPlayers,playerCounter:this.state.playerCounter+1},function(){console.log(_this5.state.players,'players');});}}},{key:\"submitAnswer\",value:function submitAnswer(name,answer){console.log(\"Game submit answer call\");console.log(\"name\",name);console.log(\"answer\",answer);console.log(\"players\",this.state.players);var player=this.state.players.filter(function(player){console.log(\"play\",player);return player.name===name;});console.log(\"player\",player);var updatedPlayers=this.state.players.filter(function(player){return player.name!==name;});console.log(\"updatedPlayers\",updatedPlayers);// player.forEach(play => {\n//     console.log(\"play\",play);\n//     play.qAnswered = true;\n// }\nconsole.log(\"false\",player.qAnswered);player[0].qAnswered=true;// player[0].qAnswered = true;\nconsole.log(\"correctAnswer\",this.state.questions[this.state.currentQuestion].correctAnswer);answer===this.state.questions[this.state.currentQuestion].correctAnswer?player[0].answeredCorrect=true:player[0].answeredCorrect=false;updatedPlayers.push(player[0]);this.setState({players:updatedPlayers});}},{key:\"getLeaderBoard\",value:function getLeaderBoard(){console.log(\"leaderboard gets called\");var unsorted=_toConsumableArray(this.state.players);console.log(this.state.players);var leaderboard=unsorted.sort(function(a,b){return b.score-a.score;});console.log(\"leaderboard\",leaderboard);this.setState({leaderBoard:leaderboard});}},{key:\"render\",value:function render(){var _this6=this;console.log(this.props);var userId=this.props.match.params.id;console.log(\"userId\",userId);var _this$state3=this.state,pin=_this$state3.pin,questions=_this$state3.questions,currentQuestion=_this$state3.currentQuestion,isLive=_this$state3.isLive,questionOver=_this$state3.questionOver,gameOver=_this$state3.gameOver,playersLength=_this$state3.playersLength;// let mappedPlayers = this.state.players;\nvar mappedPlayers=this.state.players.map(function(player){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"h2\",{children:[player.name,\" Joined the game\"]},player.id)});});return/*#__PURE__*/_jsxs(\"div\",{className:\"component-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Kwizz Pin\"}),/*#__PURE__*/_jsx(\"h1\",{children:pin})]}),!isLive&&!questionOver&&!gameOver?/*#__PURE__*/_jsxs(\"div\",{className:\"btn-players\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this6.startGame();},className:\"btn-play\",children:\"Play\"}),/*#__PURE__*/_jsx(\"p\",{className:\"player-name\",id:\"player-join\",children:\"Players joined!\"}),mappedPlayers]}):isLive&&!questionOver&&!gameOver?/*#__PURE__*/_jsx(GameQuestions,{question:questions[currentQuestion].question,answer1:questions[currentQuestion].answer1,answer2:questions[currentQuestion].answer2,answer3:questions[currentQuestion].answer3,answer4:questions[currentQuestion].answer4,questionOver:this.questionOver}):/*#__PURE__*/_jsx(GameQuestionOver,{nextQuestion:this.nextQuestion,leaderboard:this.state.leaderBoard,lastQuestion:this.state.questions.length===this.state.currentQuestion,userId:userId})]});}}]);return Game;}(Component);function mapStateToProps(state){console.log(\"state\",state);return{quiz:state.quiz,selectedPin:state.selectedPin,hostPinsArray:state.hostPinsArray};}// export default connect(null, {selectedPin })(Game)\nexport default connect(mapStateToProps,{selectedPin:selectedPin,editHostPins:editHostPins})(Game);// export default connect(mapStateToProps)(Game)\n// export default connect(mapStateToProps,{selectedPin})(Game)","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main/client/src/components/Game/Game.js"],"names":["React","Component","axios","io","connect","selectedPin","editHostPins","sound1","GameQuestions","GameQuestionOver","Socket","sound","jwt","Game","state","pin","timer","isLive","questionOver","gameOver","currentQuestion","questions","players","playersLength","playerCounter","leaderBoard","bind","nextQuestion","audio","Audio","audio1","connectionOptions","token","localStorage","getItem","console","log","props","get","quiz","_id","headers","res","setState","data","generatePin","on","addPlayer","name","id","addHost","submitAnswer","answer","removePlayer","len","clen","length","current_length","valid","emit","result","filter","player","newPin","Math","floor","random","alert","updatedPlayers","forEach","qAnswered","answeredCorrect","getLeaderBoard","internalTimer","timeCheck","checkAnswers","pAnswered","score","play","endQuestion","clearInterval","timeKept","setInterval","timeKeeper","HostId","new_id","newPlayers","push","correctAnswer","unsorted","leaderboard","sort","a","b","userId","match","params","mappedPlayers","map","startGame","question","answer1","answer2","answer3","answer4","mapStateToProps","hostPinsArray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport { selectedPin, editHostPins } from '../../Reducer/Reducer';\nimport sound1 from '../../Assets/counter.wav';\nimport GameQuestions from './Game_Questions';\nimport GameQuestionOver from './Game_Question_Over';\nimport Socket from \"../../Socket\";\nimport sound from '../../Assets/ting.mp3';\nimport jwt from \"jsonwebtoken\";\nimport \"./Game.css\";\nclass Game extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pin: 0,\n            timer: 20,\n            isLive: false,\n            questionOver: false,\n            gameOver: false,\n            currentQuestion: 0,\n            questions: [],\n            players: [],\n            playersLength: 'false',\n            playerCounter: 0,\n            leaderBoard: [],\n        }\n        this.questionOver = this.questionOver.bind(this);\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.audio = new Audio(sound);\n        this.audio1 = new Audio(sound1);\n    }\n    async componentDidMount() {\n        var connectionOptions = {\n            \"force new connection\": true,\n            \"reconnect\": true,\n            \"reconnectionAttempts\": \"Infinity\",\n            \"timeout\": 10000,\n            \"transports\": [\"websocket\"]\n        };\n        const token = localStorage.getItem(\"token\");\n        console.log(\"token\", token);\n        console.log(\"game component mounted\");\n        console.log(\"players\", this.state.players);\n        console.log(\"props\", this.props);\n\n        var res = await axios.get(`http://localhost:3001/quizquestions/getQuestions/${this.props.quiz._id}`, {\n            headers: {\n                'auth-token': token\n            }\n        })\n        this.setState({ questions: res.data })\n        this.generatePin();\n        Socket.on('room-joined', (data) => {\n            console.log(\"game room joined\", data);\n            this.addPlayer(data.name, data.id, data.pin)\n        })\n        Socket.on('host-joined', (data) => {\n            console.log(\"host room joined\", data);\n            this.addHost(data.id)\n        })\n        Socket.on('player-answer', (data) => {\n            this.submitAnswer(data.name, data.answer)\n        })\n        Socket.on(\"left\", (data) => {\n            console.log(\"left event call\");\n            console.log(\"data\", data);\n            this.removePlayer(data.id);\n        })\n        Socket.on(\"pin-checked\", (data) => {\n            console.log(\"data\", data);\n            console.log(\"pin\", data.pin);\n            console.log(data.len, data.clen);\n            var length = data.len;\n            var current_length = data.clen;\n            console.log(\"game pin\", this.state.pin);\n            if (data.pin == this.state.pin) {\n                var valid = true;\n            } else {\n                var valid = false;\n            }\n            console.log(\"valid\", valid);\n            if (valid == true) {\n                current_length = length;\n                Socket.emit(\"valid\", valid);\n            } else {\n                if (data.len == data.clen) {\n                    Socket.emit(\"valid\", valid);\n                }\n            }\n\n        })\n    }\n    removePlayer(id) {\n        let { players } = this.state;\n        console.log(\"players\", players);\n        const result = players.filter(player => player.id != id);\n        console.log(\"result\", result);\n        this.setState({ players: result }, () => {\n            console.log(this.state.players, 'players')\n        });\n\n    }\n    generatePin() {\n        console.log(\"generate pin called\");\n        console.log(\"props\", this.props);\n        let newPin = Math.floor(Math.random() * 9000, 10000)\n        // console.log(\"pin\", newPin);\n        this.setState({ pin: newPin })\n        Socket.emit('host-join', { pin: newPin });\n        this.props.selectedPin(this.state.pin)\n        this.props.editHostPins(this.state.pin);\n    }\n    startGame() {\n        // console.log(\"Game Started\");\n        let { players } = this.state;\n        console.log(\"players\", players);\n        console.log(\"players length\", players.length);\n        if (players[0] && players[1]) {\n            this.nextQuestion()\n            this.setState({\n                isLive: true\n            })\n        } else {\n            alert('You need at least 2 players to start')\n        }\n        // this.nextQuestion();\n        // this.setState({\n        //     isLive: true\n        // })\n    }\n    questionOver() {\n        console.log(\"question over call\");\n        let { pin, players } = this.state\n        // console.log(\"pin\", pin);\n        Socket.emit('question-over', { pin })\n        let updatedPlayers = [...players];\n        updatedPlayers.forEach((player) => {\n            player.qAnswered = false;\n            player.answeredCorrect = false;\n        })\n        this.getLeaderBoard()\n        this.setState({\n            questionOver: true,\n            currentQuestion: this.state.currentQuestion + 1,\n        })\n    }\n    timeKeeper() {\n        let internalTimer = 20;\n        console.log(\"timekeeper called\");\n        let players = [...this.state.players]\n        console.log(\"players\", players);\n        this.setState({ questionOver: false })\n        timeCheck = timeCheck.bind(this)\n        function timeCheck() {\n            // console.log(\"timecheck called\");\n            console.log(\"internaleTimer\", internalTimer);\n            let checkAnswers = () => {\n                let pAnswered = 0;\n                players.forEach((player) => {\n                    return player.qAnswered ? ++pAnswered : null\n                })\n                players.forEach(player => {\n                    // console.log(\"correct/incorrect\",player.answeredCorrect);\n\n                    if (player.answeredCorrect) {\n                        console.log(player.name + \"answer correctlye\")\n                        console.log(\"internal timer\" + internalTimer);\n                        var score = (internalTimer * 10 + 1000);\n                        console.log(\"score\", score);\n                        player.score += (internalTimer * 10 + 1000);\n                        Socket.emit('sent-info', { id: player.id, pin: this.state.pin, score: player.score, answeredCorrect: player.answeredCorrect })\n                    }\n                });\n                console.log(\"internal timer\" + internalTimer)\n                if (internalTimer == 4) {\n                    this.audio1.play();\n                }\n                return pAnswered === players.length ? internalTimer = 0 : internalTimer -= 1;\n                // return internalTimer -= 1;\n            }\n            let endQuestion = () => {\n                clearInterval(timeKept);\n                this.questionOver();\n            }\n\n            return internalTimer > 0\n                ? checkAnswers()\n                : endQuestion()\n        }\n        let timeKept = setInterval(() => { timeCheck() }, 1000);\n        return timeKept\n    }\n\n    nextQuestion() {\n        console.log(\"next question called\");\n        let { pin, questions, currentQuestion } = this.state;\n        this.timeKeeper();\n\n        if (currentQuestion === questions.length) {\n            this.setState({ gameOver: true })\n            Socket.emit('game-over')\n        } else {\n            Socket.emit('next-question', { pin })\n        }\n        // currentQuestion === questions.length\n        //     ? this.setState({ gameOver: true })\n        //     this.Socket.emit('question-over')\n        //     :\n        // this.Socket.emit('next-question', { pin })\n        this.setState({ questionOver: false })\n    }\n    addHost(id) {\n        this.setState({ HostId: id });\n    }\n    addPlayer(name, id, pin) {\n        console.log(\"im in add player\");\n        if (pin == this.state.pin) {\n            this.audio.play();\n            // this.setState({id:id})\n            //  audio.play();\n            console.log(\"add player call\");\n            console.log(\"add player name\", name);\n            // console.log(\"id\",id);\n            console.log(\"players\", this.state.players);\n            console.log(id + \"\" + pin);\n            var new_id = id + \"\" + pin;\n            // console.log(\"add player id\", id);\n            let player = {\n                id: id,\n                // this is now their socket id so they can pull their score to the player component using this\n                name: name,\n                score: 0,\n                qAnswered: false,\n                answeredCorrect: false\n            }\n            console.log(\"player\", player);\n            let newPlayers = [...this.state.players]\n            newPlayers.push(player)\n            console.log(\"newPLayers\", newPlayers);\n            this.setState({\n                players: newPlayers,\n                playerCounter: this.state.playerCounter + 1\n            }, () => {\n                console.log(this.state.players, 'players')\n            })\n        }\n\n    }\n    submitAnswer(name, answer) {\n        console.log(\"Game submit answer call\");\n        console.log(\"name\", name);\n        console.log(\"answer\", answer);\n        console.log(\"players\", this.state.players);\n        let player = this.state.players.filter(player => {\n            console.log(\"play\", player);\n            return player.name === name;\n        })\n        console.log(\"player\", player);\n        let updatedPlayers = this.state.players.filter(player => player.name !== name);\n        console.log(\"updatedPlayers\", updatedPlayers);\n        // player.forEach(play => {\n        //     console.log(\"play\",play);\n        //     play.qAnswered = true;\n        // }\n        console.log(\"false\", player.qAnswered);\n        player[0].qAnswered = true;\n        // player[0].qAnswered = true;\n        console.log(\"correctAnswer\", this.state.questions[this.state.currentQuestion].correctAnswer);\n        answer === this.state.questions[this.state.currentQuestion].correctAnswer\n            ? player[0].answeredCorrect = true\n            : player[0].answeredCorrect = false\n\n        updatedPlayers.push(player[0])\n        this.setState({\n            players: updatedPlayers\n        })\n    }\n\n    getLeaderBoard() {\n        console.log(\"leaderboard gets called\");\n        let unsorted = [...this.state.players];\n        console.log(this.state.players);\n        let leaderboard = unsorted.sort((a, b) => b.score - a.score)\n        console.log(\"leaderboard\", leaderboard)\n        this.setState({\n            leaderBoard: leaderboard\n        })\n    }\n    render() {\n        console.log(this.props);\n        var userId = this.props.match.params.id;\n        console.log(\"userId\", userId);\n        let { pin, questions, currentQuestion, isLive, questionOver, gameOver, playersLength } = this.state;\n        // let mappedPlayers = this.state.players;\n        let mappedPlayers = this.state.players.map(player => {\n            return (\n                <>\n                    <h2 key={player.id}>{player.name} Joined the game</h2></>\n            )\n        })\n        return (\n            <div className='component-container' >\n                <div>\n                    <p>Kwizz Pin</p>\n                    <h1>{pin}</h1>\n                </div>\n                {\n\n                    !isLive && !questionOver && !gameOver ?\n                        <div className='btn-players' >\n                            <button onClick={() => this.startGame()} className='btn-play' >Play</button>\n                            <p className='player-name' id='player-join'>Players joined!</p>\n\n                            {mappedPlayers}\n                        </div>\n                        :\n                        isLive && !questionOver && !gameOver ?\n                            <GameQuestions\n                                question={questions[currentQuestion].question}\n                                answer1={questions[currentQuestion].answer1}\n                                answer2={questions[currentQuestion].answer2}\n                                answer3={questions[currentQuestion].answer3}\n                                answer4={questions[currentQuestion].answer4}\n                                questionOver={this.questionOver} />\n                            :\n                            <GameQuestionOver\n                                nextQuestion={this.nextQuestion}\n                                leaderboard={this.state.leaderBoard}\n                                lastQuestion={this.state.questions.length === this.state.currentQuestion}\n                                userId={userId}\n                            />\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state\", state)\n    return {\n        quiz: state.quiz,\n        selectedPin: state.selectedPin,\n        hostPinsArray: state.hostPinsArray\n    }\n}\n// export default connect(null, {selectedPin })(Game)\nexport default connect(mapStateToProps, { selectedPin, editHostPins })(Game)\n\n// export default connect(mapStateToProps)(Game)\n// export default connect(mapStateToProps,{selectedPin})(Game)"]},"metadata":{},"sourceType":"module"}